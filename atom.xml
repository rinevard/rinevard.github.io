<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rinevard</title>
  
  
  <link href="http://rinevard.github.io/atom.xml" rel="self"/>
  
  <link href="http://rinevard.github.io/"/>
  <updated>2025-02-14T14:29:20.748Z</updated>
  <id>http://rinevard.github.io/</id>
  
  <author>
    <name>Rinevard</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>探索</title>
    <link href="http://rinevard.github.io/wiki/game-design/%E5%AF%B9%E6%8E%A2%E7%B4%A2%E7%B1%BB%E6%B8%B8%E6%88%8F%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>http://rinevard.github.io/wiki/game-design/%E5%AF%B9%E6%8E%A2%E7%B4%A2%E7%B1%BB%E6%B8%B8%E6%88%8F%E7%9A%84%E6%80%9D%E8%80%83/</id>
    <published>2025-02-14T12:36:38.000Z</published>
    <updated>2025-02-14T14:29:20.748Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要探索呢？"><a href="#为什么要探索呢？" class="headerlink" title="为什么要探索呢？"></a>为什么要探索呢？</h2><p>设想一下，如果我们乘上了飞船，飞入太空，忽然发现一颗行星朝着反方向转动了。这时你会不会想去那里？如果我们在网上发现了一个网站，点开第一个链接发现里面是你的家庭住址（我超，盒！），你会不会想继续翻别的链接？人类探索的动力被命名为好奇心，好奇驱动探索。</p><p>好吧，我们不妨把话说得更明白一些，好奇驱动探索的意思就是：“我相信那里有值得关注的东西，但不确切知道是什么，所以我要去探索。”</p><p>这听起来真的是再平凡不过的事情了，那就来分析一下怎么激发玩家的好奇心，再让好奇驱动探索吧。</p><h2 id="相信有值得关注的东西"><a href="#相信有值得关注的东西" class="headerlink" title="相信有值得关注的东西"></a>相信有值得关注的东西</h2><p>在探索之前，首先要让玩家相信“那里有值得关注的东西”。值得关注的东西并不难做，它们可以是奇观、奖励乃至挑战，关键是怎样让玩家相信“那里有东西”。</p><p>做法很多，我们来找几个例子，看看关注探索感的游戏都是怎么做到这一点的。</p><p>首先来看类银河城游戏，对有经验的玩家，获得新能力就自然想到“以前有个过不去的路能靠这个能力过去”，然后也就想到“那里有值得关注的东西”；看到墙就自然想到假墙，然后就想到“那里有值得关注的东西”了。然而，这种做法过度依赖玩家的先验知识。对一个新接触类银河城的玩家来说，到处迷路才是更可能发生的事情，他们根本不知道“哪里有值得关注的东西”。</p><p>我想这也是类银河城游戏相对小众的原因，它只给有经验的玩家提供了探索感，而给新玩家提供了迷路感。能力锁尚且好说，假墙就实在是不利于探索感的塑造了，毕竟大多数玩家的先验知识是“墙体不可破坏”，根本就不会想到“墙后面有值得关注的东西”。不过假墙并非一无是处，它能给玩家一种“秘密”的感觉，这就是题外话了。所以说如果做类银河城，起码要提醒一下玩家这些设计的存在，而不是盲目地抄别的银河城的做法。在空洞骑士开局的时候，我们必须打碎一面墙才能前进，这就是一个不错的提醒。不过根据我的经验，我们至少要重复三次这样的提醒，玩家才能略微对这样的事情有一点印象。</p><p>接下来看看清单式开放世界。虽然在地图上到处塞问号的方法为人诟病，但这也确实非常清晰地把“那里有东西”传达给了玩家。那为什么为人诟病呢？主要是因为问号里的东西千篇一律，连“值得关注的东西”都没做到。那如果把每个问号都塞一个精美的支线，会好点吗？恐怕也不一定，因为被动地接受问号和主动发现问号带来的“值得关注感”是不一样的。自己找到的东西，就算再无聊也会想看完。</p><p>这里就不谈塞尔达了。说起来不太好意思，但我在玩的时候确实没感到什么探索欲望。一是我没感觉到哪里有东西，二是因为我也没感觉有什么值得我关注的东西。（球球了，不要开除我的玩家籍）</p><p>然后谈谈星际拓荒吧，这篇文章可以说就是为了星际拓荒而写的。星际拓荒的做法主要有两种，一种是奇观，另一种是非常直白地用文字告诉你“那里有东西”。前者不必多说，后者的文字描述本身也足以让玩家觉得那里“值得关注”。</p><h2 id="不确切知道有什么"><a href="#不确切知道有什么" class="headerlink" title="不确切知道有什么"></a>不确切知道有什么</h2><p>这一点看起来不难实现，但和前一点结合起来就很难了。玩家玩了一段时间游戏后，很快就会对奖励有一定预期，如果做不到打破这种预期，就会让玩家丧失好奇心，丧失探索欲。</p><p>其实，绝大多数游戏都让玩家丧失了探索欲，让我们以清单式开放世界为例，看看问号是如何让玩家失去探索欲的。</p><p>假设我们面前有一个玩家在玩游戏，我们看看会发生什么。玩家到了第一个问号，是一个有趣的战斗！玩家很开心。玩家到了第二个问号，是一个高级武器！玩家很开心。……玩家到了第 16 个问号，是一个已经重复过不知道多少遍的的战斗，在战斗结尾还奖励了一个高级武器！玩家对此早有预期，不再想去下一个问号了。</p><p>看见了吗，玩家就是这样丧失探索欲，沦为清问号机器的。</p><h2 id="开放世界里的问号"><a href="#开放世界里的问号" class="headerlink" title="开放世界里的问号"></a>开放世界里的问号</h2><p>这么说来，把每个问号的内容都换成一个玩家猜不到是什么的精美的支线就能激发探索欲？这确实能改善现状，但也并非全然如此。问号始终没有完全做到让玩家觉得那个地方“值得关注”，毕竟问号是设计师在地图上标出来的，而不是玩家主动标出的。</p><p>许多类银河城里也提供了在地图上打标记的功能，我们可以横向对比一下。很明显，一张全是自己标出的问号的地图和一张全是游戏自带的问号的地图相比，前者更能激发探索欲。究其根本，就在于前者的每个问号都真的让玩家相信“那里有值得关注的东西”。</p><p>那么怎么改进开放世界里的问号呢？我也不确定。说到底问号这个东西根本就没让玩家觉得“那里有值得关注的东西”不是吗？终究要让玩家觉得自己是主动关注到那里的才行，问号还是太被动了。</p><h2 id="文末"><a href="#文末" class="headerlink" title="文末"></a>文末</h2><p>写到这里，关于探索的内容就基本写完了，最后是一些让探索更有趣的小技巧，我随便列一些，不再详谈。</p><ol><li>能力软锁：常见于类银河城。能力软锁不仅是关卡设计手段，也是控制可选路线数量的工具。限制选项数量的重要性不必多说。</li><li>线索：好的秘密需要提示，而非随机乱逛。我实在是欣赏不了到处乱藏东西的银河城。这还会涉及到电波式谜题（我感觉比“点击式谜题”更好理解）和逻辑谜题的差异，不详谈。</li><li>知识积累：游戏应该逐步教会玩家识别探索机会的能力，也被称作“知识锁”。</li><li>一个相当有趣的体验是“新视角”，即发现了过去没有发现的探索机会。能力成长、环境变化、知识积累都能带来新视角。其中我最喜欢的是环境变化和知识积累带来的新视角，大概是因为不常见吧。</li></ol><p>让我们试试一个简单的传达探索的体验的 demo 。我们看到了下面的东西：</p><p><a href="../../../secret/">所以，这就是探索了？</a></p><p>你好奇那里有什么吗？既然你读完了文章，希望你也会好奇作者还能整出什么新活吧。我本来应该在里面放置一些有趣的东西来满足你的好奇心，不过考虑到时间有限，就只能放个普通的彩蛋了。</p><style>/* 隐藏草书 */.hidden-fancy-text {    font-family: 'Brush Script MT', cursive;    font-size: 20px;    /* text-align: center; */    margin: 20px 0;    /* padding: 20px; */    line-height: 1.5;    color: transparent;    cursor: default}.hidden-fancy-text::selection {    color: darkred;    background: white;}</style><div class="hidden-fancy-text">如果作者在认真做游戏的话，我们也应该会见面的。</div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么要探索呢？&quot;&gt;&lt;a href=&quot;#为什么要探索呢？&quot; class=&quot;headerlink&quot; title=&quot;为什么要探索呢？&quot;&gt;&lt;/a&gt;为什么要探索呢？&lt;/h2&gt;&lt;p&gt;设想一下，如果我们乘上了飞船，飞入太空，忽然发现一颗行星朝着反方向转动了。这时你会不会想去那</summary>
      
    
    
    
    <category term="游戏设计" scheme="http://rinevard.github.io/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="体验" scheme="http://rinevard.github.io/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/%E4%BD%93%E9%AA%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>建站过程</title>
    <link href="http://rinevard.github.io/wiki/about-blog/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/"/>
    <id>http://rinevard.github.io/wiki/about-blog/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/</id>
    <published>2025-02-06T02:34:53.000Z</published>
    <updated>2025-02-06T05:01:57.758Z</updated>
    
    <content type="html"><![CDATA[<p>本站成功搭建的最大功臣是 Claude-3.5-sonnet，在这类复杂但并不困难的任务上，和 AI 合作真是再合适不过了。本文简要复盘一下整个网站的搭建过程，顺便提醒一下未来的自己一些 Hexo 的基本操作。</p><h1 id="网站搭建"><a href="#网站搭建" class="headerlink" title="网站搭建"></a>网站搭建</h1><p>写完 2024 年度总结之后，就有了重新搭建博客的想法。随便翻了翻几个同学的博客，感觉挺不错的，于是决定去问 Claude 怎么搭博客。这次肯定不会像第一次建站一样随便挑个主题就用上去，也不会像（这次之前的）最后一次建站一样从头开始自己写。认真找找合适的主题，然后用上就好了。</p><p>我的主要诉求是：写作方便、用树状结构收纳文章，小克推荐了 Hexo 的 NexT.Pisces 和 Wikitten 两个主题以及 VitePress。由于有 Hexo 的使用经验，就选了 Hexo。由于一时半会没找到 NexT.Pisces 是什么，就用了 Wikitten.</p><p>写得我都困了，我们的建站过程没有什么<strong>奇幻色彩</strong>吗？</p><p>有的有的，今天早上断网了，把路由器复位了一下才重新开始建站。</p><p>选好了方案之后，就可以按部就班地和 Claude 一起建站了。不懂的就去问 Claude，它都懂的。</p><h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><p>最常用的三件套：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment"># 清理缓存，似乎在修改了配置文件以后可以用一用</span></span><br><span class="line">hexo g      <span class="comment"># g 是 generate 的缩写。生成静态文件</span></span><br><span class="line">hexo s      <span class="comment"># s 是 server 的缩写。服务器，启动！</span></span><br></pre></td></tr></table></figure><p>增删文章、文件夹设置、部署到 GitHub page：</p><ol><li><strong>删除文章</strong></li></ol><p>直接删除 <code>source/_posts</code> 目录下的对应 .md 文件即可</p><ol start="2"><li><strong>新增文章</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">&quot;我是一只鲤鱼。我是一只鲤鱼吗？我觉得我是。&quot;</span></span><br></pre></td></tr></table></figure><p>这会生成一个标题为”我是一只鲤鱼。我是一只鲤鱼吗？我觉得我是。”的文章。</p><ol start="3"><li><strong>设置多层文件夹</strong></li></ol><p>在文章头部这样写：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 睡觉入门到精通</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> 生活</span><br><span class="line"><span class="section">  - 睡觉技巧</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><ol start="4"><li><strong>生成和部署</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>如果是新建的站，部署前要修改配置文件的 deploy 部分哦，修改过一次以后就不用再改了。不懂问 Claude。</p><p>可以在根目录的 _config.yml 和的 themes 的 _config.yml 里调整配置文件。</p><h1 id="（可能的）后续改进"><a href="#（可能的）后续改进" class="headerlink" title="（可能的）后续改进"></a>（可能的）后续改进</h1><p>我比较关心的改进是侧边栏收缩来全屏浏览笔记、配色调整。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本站成功搭建的最大功臣是 Claude-3.5-sonnet，在这类复杂但并不困难的任务上，和 AI 合作真是再合适不过了。本文简要复盘一下整个网站的搭建过程，顺便提醒一下未来的自己一些 Hexo 的基本操作。&lt;/p&gt;
&lt;h1 id=&quot;网站搭建&quot;&gt;&lt;a href=&quot;#网站搭</summary>
      
    
    
    
    <category term="关于本站" scheme="http://rinevard.github.io/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/"/>
    
    
  </entry>
  
  <entry>
    <title>欢迎！</title>
    <link href="http://rinevard.github.io/wiki/%E6%AC%A2%E8%BF%8E%EF%BC%81/"/>
    <id>http://rinevard.github.io/wiki/%E6%AC%A2%E8%BF%8E%EF%BC%81/</id>
    <published>2025-02-06T02:25:53.000Z</published>
    <updated>2025-02-06T13:41:24.805Z</updated>
    
    <content type="html"><![CDATA[<!-- 调整 themes 里的 config 里的 default_index_file 来修改打开站点时见到的文章 --><p>这是一篇欢迎文章，欢迎来到我的网站！</p><p>网站好像不是很漂亮？我承诺会改改的！让我先为你介绍一下网站的基本布局。</p><p>如你所见，左边是网站的文章列表，以文件夹的形式排布；左上方是几个按钮，“关于”是我的自我介绍，“历史”记录了文章的诞生时间线，如果迷路了，点击“首页”或者左上角的“Rinevard”就能回到这里了。在很多博客里，文章的诞生时间线被叫做“归档”，不过我觉得这个名字并不清晰，于是改成了“历史”。</p><p><img src="/images/%E6%AC%A2%E8%BF%8E/%E5%A5%97%E5%A8%83.png"></p><p>本网站使用了 Hexo 的 <a href="https://github.com/zthxxx/hexo-theme-Wikitten">Wikitten</a> 主题，在我看来，其最大优点是以文件夹的形式排布文章。博客的文章应当成体系且便于检索，而非一篇一篇堆积在网站上，构成凌乱的山。这一功能值得放在最高优先级，因此外表稍微简陋一点也无所谓了。</p><p>我应该主要会在这里放一些杂谈和游戏相关的文章，欢迎来看！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- 调整 themes 里的 config 里的 default_index_file 来修改打开站点时见到的文章 --&gt;

&lt;p&gt;这是一篇欢迎文章，欢迎来到我的网站！&lt;/p&gt;
&lt;p&gt;网站好像不是很漂亮？我承诺会改改的！让我先为你介绍一下网站的基本布局。&lt;/p&gt;
&lt;p&gt;如你</summary>
      
    
    
    
    
  </entry>
  
</feed>
